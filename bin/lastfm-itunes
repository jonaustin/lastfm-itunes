#!/usr/bin/env ruby
require 'yaml'
require 'highline/import'
require 'ruby-progressbar'

def progressbar(total)
  ProgressBar.create(
    starting_at: 0,
    total: total,
    format: "%a".color(:cyan) + "|".color(:magenta) + "%B".color(:green) + "|".color(:magenta) +  "%p%%".color(:cyan))
end

lastfm_yml_path = File.expand_path("~/.config/lastfm-itunes.yml")
if File.exists?(lastfm_yml_path)
  @lastfm_credentials = YAML.load_file(lastfm_yml_path)
end

$LOAD_PATH.unshift(File.expand_path(File.dirname(__FILE__) + "/../lib"))
require 'lastfm-itunes'

puts "\nLastfm iTunes Playlist Creator".color(:blue)
puts ("="*30).color(:green)
puts


itunes_xml_path = ask("Where is your iTunes Library XML file?  ") do |q|
  q.default = File.expand_path("~/Music/iTunes/iTunes Music Library.xml")
end
m3u_path = ask("Where to store generated playlist?  ") do |q|
  q.default = Pathname(itunes_xml_path).dirname.join('Lastfm Top Tracks.m3u').to_s
end

puts "\nFind or create Lastfm API secret and key here: http://www.last.fm/api/accounts".color(:yellow)
api_key = ask("What is your Lastfm API Key?  ") do |q|
  q.default = @lastfm_credentials['api_key'] if @lastfm_credentials
end
api_secret = ask("What is your Lastfm API Secret?  ") do |q|
  q.default = @lastfm_credentials['api_secret'] if @lastfm_credentials
end
@lastfm_credentials = {api_secret: api_secret, api_key: api_key}

limit = ask("\nNumber of tracks to fetch per artist?  ") do |q|
  q.default = 'all'
end
limit = limit.to_i > 0 ? limit.to_i : nil

args = { itunes_xml_path: itunes_xml_path,
            lastfm_credentials: @lastfm_credentials,
            limit: limit }

puts "\nGenerating.....".color(:green)
#progressbar = progressbar(generator.send(:itunes_artist_tracks).keys.size)
#generator.generate_m3u { progressbar.increment }
generator = LastfmItunes::Generator.new(m3u_path)
playlist = LastfmItunes::Playlist.new(args)
playlist.fetch_tracks
generator.generate(playlist.track_paths)
puts "\nHurrah! Your playlist has been generated at: ".color(:green) + "#{m3u_path}".color(:yellow)
