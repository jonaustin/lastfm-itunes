#!/usr/bin/env ruby
$LOAD_PATH.unshift(File.expand_path(File.dirname(__FILE__) + "/../lib"))
require 'lastfm-itunes'
require 'lastfm-itunes/cli'

cli = LastfmItunes::CLI.new

puts "\nLastfm iTunes Playlist Creator".color(:blue)
puts ("="*30).color(:green)
puts

cli.ask_itunes
cli.ask_m3u_path
puts
cli.get_lastfm_credentials

puts
search_type = cli.choose_search_type
if search_type == 'Artist'
  cli.ask_limit("Maximum number of tracks to fetch per artist?  ")
elsif search_type == 'User'
  cli.ask_username
  cli.ask_limit("Maximum number of tracks to fetch?  ")
end

args = { itunes_xml_path: cli.itunes_xml_path,
         credentials:     cli.lastfm_credentials,
         search_class:    Object.const_get('LastfmItunes::Lastfm::' + search_type),
         limit:           cli.limit }
args.merge!(name: cli.username) if cli.search_type == 'User'

puts
puts "Extracting from iTunes....".color(:green)
playlist = LastfmItunes::Playlist.new(args)
puts "  Found #{playlist.itunes.artists.size} artists and #{playlist.itunes.tracks.size} tracks"


puts "Retrieving from Last.fm...".color(:green)
# Artist search requires multiple API queries so show progress bar that increments on
# each artist found. (i.e. it could take a few minutes)
total_lf_tracks = 0
if cli.search_type == 'Artist'
  progressbar = cli.progressbar(playlist.itunes.artists.size)
  playlist.fetch_tracks do |num_tracks|
    total_lf_tracks += (cli.limit && cli.limit < num_tracks ? cli.limit : num_tracks)
    progressbar.increment
  end
else
  playlist.fetch_tracks { |num_tracks| total_lf_tracks += num_tracks }
end
puts "  Found #{playlist.tracks.size} iTunes tracks out of #{total_lf_tracks} Last.fm tracks"

puts "Generating Playlist.......".color(:green)
generator = LastfmItunes::Generator.new(cli.m3u_path)
generator.generate(playlist.track_paths)

puts
puts "Success! Your playlist has been generated at: ".color(:green) + "#{cli.m3u_path}".color(:yellow)
